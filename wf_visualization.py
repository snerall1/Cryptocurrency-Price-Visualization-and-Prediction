import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

def visualization():
    file = open("data_processing\summary.txt","w") 
    df1=pd.read_csv("data_processing\Dogecoin.csv")
    df2=pd.read_csv("data_processing\Ethereum.csv")
    df3=pd.read_csv("data_processing\Bitcoin.csv")
    df1 = df1.iloc[: , 1:] 
    df2 = df2.iloc[: , 1:]     
    df3 = df3.iloc[: , 1:]
    a1=df1['High'].max()
    b1=df1['Low'].max()
    c1=df1['Open'].max()
    d1=df1['Close'].max()
    e1=df1['High'].min()
    f1=df1['Low'].min()
    g1=df1['Open'].min()
    h1=df1['Close'].min()
    i1=df1['High'].median()
    j1=df1['Low'].median()
    k1=df1['Open'].median()
    l1=df1['Close'].median()
    a2=df2['High'].max()
    b2=df2['Low'].max()
    c2=df2['Open'].max()
    d2=df2['Close'].max()
    e2=df2['High'].min()
    f2=df2['Low'].min()
    g2=df2['Open'].min()
    h2=df2['Close'].min()
    i2=df2['High'].median()
    j2=df2['Low'].median()
    k2=df2['Open'].median()
    l2=df2['Close'].median()
    a3=df3['High'].max()
    b3=df3['Low'].max()
    c3=df3['Open'].max()
    d3=df3['Close'].max()
    e3=df3['High'].min()
    f3=df3['Low'].min()
    g3=df3['Open'].min()
    h3=df3['Close'].min()
    i3=df3['High'].median()
    j3=df3['Low'].median()
    k3=df3['Open'].median()
    l3=df3['Close'].median()
    file.write("Max, Min and Median of attribute 'High' for "+ df1['Name'][0] +" are: "+" ")
    file.write(a1.astype(str)+" ")
    file.write(e1.astype(str)+" ")
    file.write(i1.astype(str)+"\n")
    file.write("Max, Min and Median of attribute 'Low' for "+ df1['Name'][0] +" are: ")
    file.write(b1.astype(str)+" ")
    file.write(f1.astype(str)+" ")
    file.write(j1.astype(str)+"\n")
    file.write("Max, Min and Median of attribute 'Open' for "+ df1['Name'][0] +" are: ")
    file.write(c1.astype(str)+" ")
    file.write(g1.astype(str)+" ")
    file.write(k1.astype(str)+"\n")
    file.write("Max, Min and Median of attribute 'Close' for "+ df1['Name'][0] +" are: ")
    file.write(d1.astype(str)+" ")
    file.write(h1.astype(str)+" ")
    file.write(l1.astype(str)+"\n")
    file.write("Max, Min and Median of attribute 'High' for "+ df2['Name'][0] +" are: ")
    file.write(a2.astype(str)+" ")
    file.write(e2.astype(str)+" ")
    file.write(i2.astype(str)+"\n")
    file.write("Max, Min and Median of attribute 'Low' for "+ df2['Name'][0] +" are: ")
    file.write(b2.astype(str)+" ")
    file.write(f2.astype(str)+" ")
    file.write(j2.astype(str)+"\n")
    file.write("Max, Min and Median of attribute 'Open' for "+ df2['Name'][0] +" are: ")
    file.write(c2.astype(str)+" ")
    file.write(g2.astype(str)+" ")
    file.write(k2.astype(str)+"\n")
    file.write("Max, Min and Median of attribute 'Close' for "+ df2['Name'][0] +" are: ")
    file.write(d2.astype(str)+" ")
    file.write(h2.astype(str)+" ")
    file.write(l2.astype(str)+"\n")
    file.write("Max, Min and Median of attribute 'High' for "+ df3['Name'][0] +" are: ")
    file.write(a3.astype(str)+" ")
    file.write(e3.astype(str)+" ")
    file.write(i3.astype(str)+"\n")
    file.write("Max, Min and Median of attribute 'Low' for "+ df3['Name'][0] +" are: ")
    file.write(b3.astype(str)+" ")
    file.write(f3.astype(str)+" ")
    file.write(j3.astype(str)+"\n")
    file.write("Max, Min and Median of attribute 'Open' for "+ df3['Name'][0] +" are: ")
    file.write(c3.astype(str)+" ")
    file.write(g3.astype(str)+" ")
    file.write(k3.astype(str)+"\n")
    file.write("Max, Min and Median of attribute 'Close' for "+ df3['Name'][0] +" are: ")
    file.write(d3.astype(str)+" ")
    file.write(h3.astype(str)+" ")
    file.write(l3.astype(str)+"\n")
    count1=df1['Name'].count()
    count2=df2['Name'].count()
    count3=df3['Name'].count()
    file.write("Number of Occurences of "+ df1['Name'][0] +":")
    file.write(count1.astype(str)+"\n")
    file.write("Number of Occurences of "+ df2['Name'][0] +":")
    file.write(count2.astype(str)+"\n")
    file.write("Number of Occurences of "+ df3['Name'][0] +":")
    file.write(count3.astype(str)+"\n")
    if count1>count2 and count1>count3:
        file.write("Most frequent category: "+ df1['Name'][0]+"\n")
    elif count2>count1 and count2>count3:
        file.write("Most frequent category: "+ df2['Name'][0]+"\n")
    else:
        file.write("Most frequent category: "+ df3['Name'][0]+"\n")
    if count1<count2 and count1<count3:
        file.write("Least frequent category: "+ df1['Name'][0]+"\n")
    elif count2<count1 and count2<count3:
        file.write("Least frequent category: "+ df2['Name'][0]+"\n")
    else:
        file.write("Least frequent category: "+ df3['Name'][0]+"\n")
    file.close()
    file = open("data_processing\correlations.txt","w")
    file.write("Correlation coefficient matrix of "+ df1['Name'][0]+"\n")
    file.write(df1.corr().to_string(header=False, index=False)+"\n")
    file.write("Correlation coefficient matrix of "+ df2['Name'][0]+"\n")
    file.write(df2.corr().to_string(header=False, index=False)+"\n")
    file.write("Correlation coefficient matrix of "+ df3['Name'][0]+"\n")
    file.write(df3.corr().to_string(header=False, index=False)+"\n")
    file.close()
    fig, ax = plt.subplots(figsize=(7,5))
    plt.title("Scatter plot")
    plt.ylabel("High")
    plt.xlabel("Low")
    high=np.asarray(df1['High'])
    low=np.asarray(df1['Low'])
    plt.scatter(low,high)
    fig.savefig("visuals\Dogecoin_scatterplot1.png")
    fig, ax = plt.subplots(figsize=(7,5))
    plt.title("Scatter plot")
    plt.ylabel("Low")
    plt.xlabel("Open")
    low=np.asarray(df1['Low'])
    open1=np.asarray(df1['Open'])
    plt.scatter(low,open1)
    fig.savefig("visuals\Dogecoin_scatterplot2.png")
    fig, ax = plt.subplots(figsize=(7,5))
    plt.title("Scatter plot")
    plt.ylabel("Open")
    plt.xlabel("Close")
    open1=np.asarray(df1['Open'])
    close=np.asarray(df1['Close'])
    plt.scatter(open1,close)
    fig.savefig("visuals\Dogecoin_scatterplot3.png")
    fig, ax = plt.subplots(figsize=(7,5))
    plt.title("Scatter plot")
    plt.ylabel("Close")
    plt.xlabel("High")
    high=np.asarray(df1['High'])
    close=np.asarray(df1['Close'])
    plt.scatter(high,close)
    fig.savefig("visuals\Dogecoin_scatterplot4.png")
    fig, ax = plt.subplots(figsize=(7,5))
    plt.title("Scatter plot")
    plt.ylabel("High")
    plt.xlabel("Open")
    high=np.asarray(df1['High'])
    open1=np.asarray(df1['Open'])
    plt.scatter(high,open1)
    fig.savefig("visuals\Dogecoin_scatterplot5.png")
    fig, ax = plt.subplots(figsize=(7,5))
    plt.title("Scatter plot")
    plt.ylabel("Low")
    plt.xlabel("Close")
    low=np.asarray(df1['Low'])
    close=np.asarray(df1['Close'])
    plt.scatter(low,close)
    fig.savefig("visuals\Dogecoin_scatterplot6.png")
    fig, ax = plt.subplots(figsize=(7,5))
    plt.title("Scatter plot")
    plt.ylabel("High")
    plt.xlabel("Low")
    high=np.asarray(df2['High'])
    low=np.asarray(df2['Low'])
    plt.scatter(low,high)
    fig.savefig("visuals\Ethereum_scatterplot1.png")
    fig, ax = plt.subplots(figsize=(7,5))
    plt.title("Scatter plot")
    plt.ylabel("Low")
    plt.xlabel("Open")
    low=np.asarray(df2['Low'])
    open1=np.asarray(df2['Open'])
    plt.scatter(low,open1)
    fig.savefig("visuals\Ethereum_scatterplot2.png")
    fig, ax = plt.subplots(figsize=(7,5))
    plt.title("Scatter plot")
    plt.ylabel("Open")
    plt.xlabel("Close")
    open1=np.asarray(df2['Open'])
    close=np.asarray(df2['Close'])
    plt.scatter(open1,close)
    fig.savefig("visuals\Ethereum_scatterplot3.png")
    fig, ax = plt.subplots(figsize=(7,5))
    plt.title("Scatter plot")
    plt.ylabel("Close")
    plt.xlabel("High")
    high=np.asarray(df2['High'])
    close=np.asarray(df2['Close'])
    plt.scatter(high,close)
    fig.savefig("visuals\Ethereum_scatterplot4.png")
    fig, ax = plt.subplots(figsize=(7,5))
    plt.title("Scatter plot")
    plt.ylabel("High")
    plt.xlabel("Open")
    high=np.asarray(df2['High'])
    open1=np.asarray(df2['Open'])
    plt.scatter(high,open1)
    fig.savefig("visuals\Ethereum_scatterplot5.png")
    fig, ax = plt.subplots(figsize=(7,5))
    plt.title("Scatter plot")
    plt.ylabel("Low")
    plt.xlabel("Close")
    low=np.asarray(df2['Low'])
    close=np.asarray(df2['Close'])
    plt.scatter(low,close)
    fig.savefig("visuals\Ethereum_scatterplot6.png")
    fig, ax = plt.subplots(figsize=(7,5))
    plt.title("Scatter plot")
    plt.ylabel("High")
    plt.xlabel("Low")
    high=np.asarray(df3['High'])
    low=np.asarray(df3['Low'])
    plt.scatter(low,high)
    fig.savefig("visuals\Bitcoin_scatterplot1.png")
    fig, ax = plt.subplots(figsize=(7,5))
    plt.title("Scatter plot")
    plt.ylabel("Low")
    plt.xlabel("Open")
    low=np.asarray(df3['Low'])
    open1=np.asarray(df3['Open'])
    plt.scatter(low,open1)
    fig.savefig("visuals\Bitcoin_scatterplot2.png")
    fig, ax = plt.subplots(figsize=(7,5))
    plt.title("Scatter plot")
    plt.ylabel("Open")
    plt.xlabel("Close")
    open1=np.asarray(df3['Open'])
    close=np.asarray(df3['Close'])
    plt.scatter(open1,close)
    fig.savefig("visuals\Bitcoin_scatterplot3.png")
    fig, ax = plt.subplots(figsize=(7,5))
    plt.title("Scatter plot")
    plt.ylabel("Close")
    plt.xlabel("High")
    high=np.asarray(df3['High'])
    close=np.asarray(df3['Close'])
    plt.scatter(high,close)
    fig.savefig("visuals\Bitcoin_scatterplot4.png")
    fig, ax = plt.subplots(figsize=(7,5))
    plt.title("Scatter plot")
    plt.ylabel("High")
    plt.xlabel("Open")
    high=np.asarray(df3['High'])
    open1=np.asarray(df3['Open'])
    plt.scatter(high,open1)
    fig.savefig("visuals\Bitcoin_scatterplot5.png")
    fig, ax = plt.subplots(figsize=(7,5))
    plt.title("Scatter plot")
    plt.ylabel("Low")
    plt.xlabel("Close")
    low=np.asarray(df3['Low'])
    close=np.asarray(df3['Close'])
    plt.scatter(low,close)
    fig.savefig("visuals\Bitcoin_scatterplot6.png")
    fig, ax = plt.subplots(figsize=(7,5))
    plt.title("Histogram")
    dogecoin=np.asarray(df1['Name'])
    plt.hist(dogecoin,density=True)
    fig.savefig("visuals\histogram1.png")
    fig, ax = plt.subplots(figsize=(7,5))
    plt.title("Histogram")
    ethereum=np.asarray(df2['Name'])
    plt.hist(ethereum,density=True)
    fig.savefig("visuals\histogram2.png")
    fig, ax = plt.subplots(figsize=(7,5))
    plt.title("Histogram")
    bitcoin=np.asarray(df3['Name'])
    plt.hist(bitcoin,density=True)
    fig.savefig("visuals\histogram3.png")